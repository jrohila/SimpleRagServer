<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.github.jrohila</groupId>
        <artifactId>simple-rag-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>simple-rag-nlp</artifactId>
    <packaging>jar</packaging>
    <name>SimpleRagNlp</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>21</maven.compiler.release>
        <wordnet.version>2.4.0</wordnet.version>
        <wordnet-dict.version>3.1</wordnet-dict.version>
        <maven.download.plugin>1.13.0</maven.download.plugin>
    </properties>
    
    <repositories>
        <repository>
            <id>maven.aksw.org</id>
            <url>https://maven.aksw.org/repository/internal/</url>
            <releases/>
        </repository>
    </repositories>
    
    <dependencies>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>4.5.7</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>4.5.7</version>
            <classifier>models-english</classifier>
        </dependency>
        
        <!-- Apache OpenNLP for sentence detection -->
        <dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-tools</artifactId>
            <version>${opennlp.version}</version>
        </dependency>
        <!-- Models index library -->
        <dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-tools-models</artifactId>
            <version>${opennlp.version}</version>
        </dependency>
        <!-- English model artifacts needed at runtime by DefaultClassPathModelProvider/NounPOSTagger -->
        <dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-models-pos-en</artifactId>
            <version>${opennlp.models.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-models-sentdetect-en</artifactId>
            <version>${opennlp.models.version}</version>
        </dependency>
        
        <dependency>
            <groupId>edu.mit</groupId>
            <artifactId>jwi</artifactId>
            <version>${wordnet.version}</version>
        </dependency>

        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.14.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        
    </dependencies>
    
    <build>
        <pluginManagement>
            <plugins>
                <!-- Keep test-time download definition available (not bound here) -->
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>${maven.download.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- Copy large idf.csv from test resources into runtime classes so TextRank can load /idf.csv at runtime -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-idf-into-classes</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/test/resources</directory>
                                    <includes>
                                        <include>idf.csv</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgument>-Xlint</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <!-- Runtime: ensure dict files are in the JAR at /wordnet/dict -->
                    <execution>
                        <id>dl-wordnet-runtime-${wordnet-dict.version}</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://wordnetcode.princeton.edu/wn${wordnet-dict.version}.dict.tar.gz</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.outputDirectory}/wordnet</outputDirectory>
                            <failOnError>true</failOnError>
                            <overwrite>false</overwrite>
                        </configuration>
                    </execution>
                    <!-- Tests: keep test-classpath download as original project does -->
                    <execution>
                        <id>dl-wordnet-test-${wordnet-dict.version}</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://wordnetcode.princeton.edu/wn${wordnet-dict.version}.dict.tar.gz</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/test-classes/wordnet</outputDirectory>
                            <failOnError>true</failOnError>
                            <overwrite>false</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
</project>